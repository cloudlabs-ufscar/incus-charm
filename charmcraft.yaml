# This file configures Charmcraft.
# See https://juju.is/docs/sdk/charmcraft-config for guidance.

# (Required)
name: incus


# (Required)
type: charm


# (Recommended)
title: Incus


# (Required)
summary: Charmed Incus.

links:
  contact: cloudlabs@ufscar.br
  documentation: https://discourse.charmhub.io/t/incus-docs-index/16723
  issues:
    - https://github.com/cloudlabs-ufscar/incus-charm/issues
  source:
    - https://github.com/cloudlabs-ufscar/incus-charm
  website:
    - https://github.com/cloudlabs-ufscar/incus-charm


# (Required)
description: |
  The charm is an automated way to deploy and operate Incus.

  The charm deploys and manages Incus clusters across multiple units. Integrations
  with external network and storage services such as Ceph and OVN are provided,
  as well as an integration with Vault for cluster-wide certificate management.

  Incus can be used as a replacement for LXD or, depending on the use case,
  even more sophisticated solutions for private clouds such as OpenStack. The
  charm provides an automated way of deploying and operating Incus.

  The charm is useful for operators who wish to deploy and operate Incus.


# (Required for 'charm' type)
bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
    run-on:
    - name: ubuntu
      channel: "22.04"

assumes:
  - juju >= 3.5.0

# (Optional) Configuration options for the charm
# This config section defines charm config options, and populates the Configure
# tab on Charmhub.
# More information on this section at https://juju.is/docs/sdk/charmcraft-yaml#heading--config
# General configuration documentation: https://juju.is/docs/sdk/config
config:
  options:
    # An example config option to customise the log level of the workload
    server-port:
      description: |
        The port for the Incus API server.
      default: 8443
      type: int
    cluster-port:
      description: |
        The port for the Incus cluster communication.

        Note that Incus does not support changing the cluster address after
        the member joins the cluster. Because of this, any changes to this
        option after the cluster is formed will be ignored on existing
        units, but may be applied to new units.
      default: 8444
      type: int
    metrics-port:
      description: |
        The port in which Incus will expose the metrics server to be scraped by Prometheus.
      type: int
      default: 8443
    ceph-rbd-features:
      description: |
        Comma-separated list of RBD features to enable for volumes on the Ceph
        storage pool.

        To see all available features, refer to the Ceph RBD documentation:
        https://docs.ceph.com/en/latest/man/8/rbd/#cmdoption-rbd-image-feature
      default: layering
      type: string
    package-repository:
      description: |
        A full source list entry to define an extra package repository.

        A complete reference for the format of the source list entry
        is available at https://wiki.debian.org/SourcesList.
      default: deb https://pkgs.zabbly.com/incus/stable jammy main
      type: string
    package-repository-gpg-key:
      description: |
        An optional URL from which to download the GPG key used to verify the
        package signatures in the repository specified in `package-repository`.
      default: https://pkgs.zabbly.com/key.asc
      type: string
    set-failure-domain:
      description: |
        When enabled, the charm will use Juju's availability zones to set the failure
        domain of each node in the cluster.

        For more information about failure domains, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/explanation/clustering/#failure-domains
      default: true
      type: boolean
    enable-web-ui:
      description: |
        Whether to enable the Incus Web UI.
      default: false
      type: boolean
    oidc-audience:
      description: |
        The expected audience value for the application.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openid-connect-configuration
      type: string
    oidc-claim:
      description: |
        OpenID Connect claim to use as the username.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openid-connect-configuration
      type: string
    oidc-client-id:
      description: |
        OpenID Connect client ID for the application.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openid-connect-configuration
      type: string
    oidc-issuer:
      description: |
        OpenID Connect Discovery URL for the provider.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openid-connect-configuration
      type: string
    oidc-scopes:
      description: |
        Comma separated list of OpenID Connect scopes.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openid-connect-configuration
      type: string
    openfga-api-token:
      description: |
        API Token of the OpenFGA server.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openfga-configuration
      type: string
    openfga-api-url:
      description: |
        URL of the OpenFGA server.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openfga-configuration
      type: string
    openfga-store-id:
      description: |
        ID of the OpenFGA permission store.

        For more information, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/#openfga-configuration
      type: string
    ovn-uplink-network-type:
      description: |
        The type of network that will be used to create the OVN uplink network.

        Valid values are: "physical" and "bridge".
      default: bridge
      type: string
    ovn-uplink-network-config:
      description: |
        A space separated list of key value pairs in the form key=value to be set on the uplink
        network that will be consumed by OVN networks.

        The accepted values by Incus will vary based on the value of `ovn-uplink-network-type`. For
        more information about supported values, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/reference/network_bridge
        https://linuxcontainers.org/incus/docs/main/reference/network_physical
      type: string
    ovn-uplink-network-parent-interface:
      description: |
        The name of the network interface that should be used as the parent network for the OVN
        uplink network. The interface name should be consistent across all units of the application.

        This option only has effect if `ovn-uplink-network-type` is set to `physical`.
      default: bridge
      type: string
    ovn-network-config:
      description: |
        A space separated list of key value pairs in the form key=value to be set on the OVN network.
        Note that setting the `network` config option in this list has no effect, as the charm will
        automatically set this option to match the created uplink network.

        For more information about supported values, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/reference/network_ovn/
      type: string
    enable-bgp:
      description: |
        Whether to enable the Incus BGP server.

        For more information about BGP support, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/howto/network_bgp
      default: false
      type: boolean
    bgp-asn:
      description: |
        The BGP ASN (Autonomous System Number) for the BGP server.

        For more information about BGP support, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/howto/network_bgp
      type: int
    create-local-storage-pool:
      description: |
        Whether to create a local storage pool.
      type: boolean
      default: true
    local-storage-pool-driver:
      description: |
        The storage driver to use for the local storage pool.

        Acceptable values are: "dir", "btrfs", "zfs" and "lvm".
      type: string
      default: zfs
    local-storage-pool-config:
      description: |
        A space separated list of key value pairs in the form key=value to be set on the local storage
        pool. Note that setting the `source` config option in this list has no effect, as the charm will
        automatically set this option to match the device specified in `local-storage-pool-device`.

        For more information about supported values, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/reference/storage_drivers/
      type: string
    local-storage-pool-device:
      description: |
        The block device in which to create the local storage pool.

        Can be either device name such as "sdx" or the full path to
        the device such as "/dev/sdx".

        When this option is not specified, a loop device or directory on the root disk will be created for
        the storage pool, depending on the driver specified by `local-storage-pool-driver`.
      type: string
    extra-config:
      description: |
        A space separated list of key value pairs in the form key=value to be set on Incus.

        For more information about supported values, refer to the Incus documentation:
        https://linuxcontainers.org/incus/docs/main/server_config/
      type: string

actions:
  add-trusted-certificate:
    description: Add a trusted certificate to the Incus daemon.
    params:
      name:
        description: The certificate name (optional)
        type: string
      projects:
        description: A comma separated list of projects to restrict the client certificate to (optional)
        type: string
      cert:
        description: |
          The raw X.509 PEM client certificate.

          The file can be passed as:
          $ juju run incus/leader add-trusted-certificate cert="$(cat client.crt)"
        type: string
      type:
        description: |
          The type of certificate to be added. Can be either "client" (the default) or "metrics".
        type: string
        default: client
    required:
      - cert
    additionalProperties: false
  add-trusted-client:
    description: |
      Generate a Incus trust token that can be used by the client to add itself to the trust store.
    params:
      name:
        description: The client name
        type: string
      projects:
        description: A comma separated list of projects to restrict the client certificate to (optional)
        type: string
    required:
      - name
    additionalProperties: false
  cluster-list:
    description: List all cluster members and their state. Equivalent to the `incus cluster list` command.
    params:
      format:
        description: |
          The output format. Can be one of: csv, json, table, yaml, compact.
        default: table
        type: string
    additionalProperties: false
  evacuate:
    description: |
      Evacuate the unit from the Incus cluster.
      For more information about evacuating nodes, refer to the Incus documentation:
      https://linuxcontainers.org/incus/docs/main/howto/cluster_manage/#evacuate-and-restore-cluster-members
    additionalProperties: false
  restore:
    description: |
      Restore the unit of the Incus cluster that was previously evacuated.
      For more information about restoring nodes, refer to the Incus documentation:
      https://linuxcontainers.org/incus/docs/main/howto/cluster_manage/#evacuate-and-restore-cluster-members
    additionalProperties: false

extra-bindings:
  public:
  monitoring:
  bgp:

peers:
  cluster:
    interface: incus-cluster

requires:
  certificates:
    interface: tls-certificates
    optional: true
    limit: 1
  ceph:
    interface: ceph-client
    limit: 1
    optional: true
  ovsdb-cms:
    interface: ovsdb-cms
    limit: 1
    optional: true

parts:
  charm:
    build-packages:
      - build-essential
      - libffi-dev
      - libssl-dev
      - python3-dev
    build-snaps:
      - rustup
    override-build: |
      rustup default stable
      craftctl default
